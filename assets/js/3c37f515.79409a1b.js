"use strict";(self.webpackChunkangular_workshop=self.webpackChunkangular_workshop||[]).push([[6582],{9613:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(9496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=s(n),d=r,g=u["".concat(p,".").concat(d)]||u[d]||m[d]||i;return n?a.createElement(g,l(l({ref:t},c),{},{components:n})):a.createElement(g,l({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4943:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=n(1163),r=(n(9496),n(9613));const i={sidebar_position:100,id:"building-blocks",tags:["component","directive","pipe","module","service","provider","styles","templates"],published:!1,description:"The main building blocks of an Angular application."},l="Building Blocks of Angular",o={unversionedId:"angular/basic-concepts/building-blocks",id:"angular/basic-concepts/building-blocks",title:"Building Blocks of Angular",description:"The main building blocks of an Angular application.",source:"@site/docs/angular/basic-concepts/building-blocks.md",sourceDirName:"angular/basic-concepts",slug:"/angular/basic-concepts/building-blocks",permalink:"/angular-workshop/docs/angular/basic-concepts/building-blocks",draft:!1,tags:[{label:"component",permalink:"/angular-workshop/docs/tags/component"},{label:"directive",permalink:"/angular-workshop/docs/tags/directive"},{label:"pipe",permalink:"/angular-workshop/docs/tags/pipe"},{label:"module",permalink:"/angular-workshop/docs/tags/module"},{label:"service",permalink:"/angular-workshop/docs/tags/service"},{label:"provider",permalink:"/angular-workshop/docs/tags/provider"},{label:"styles",permalink:"/angular-workshop/docs/tags/styles"},{label:"templates",permalink:"/angular-workshop/docs/tags/templates"}],version:"current",sidebarPosition:100,frontMatter:{sidebar_position:100,id:"building-blocks",tags:["component","directive","pipe","module","service","provider","styles","templates"],published:!1,description:"The main building blocks of an Angular application."},sidebar:"tutorialSidebar",previous:{title:"Lifecycle",permalink:"/angular-workshop/docs/angular/basic-concepts/component/component_lifecycle"},next:{title:"Exercises",permalink:"/angular-workshop/docs/category/exercises"}},p={},s=[],c={toc:s},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"building-blocks-of-angular"},"Building Blocks of Angular"),(0,r.kt)("p",null,"The main building blocks of an Angular application include:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Modules"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Modules in Angular help organize an application into cohesive blocks of functionality. They group related components, directives, pipes, and services."),(0,r.kt)("li",{parentName:"ul"},"They are defined using the ",(0,r.kt)("inlineCode",{parentName:"li"},"@NgModule")," decorator."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Components"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Components are the basic building blocks of an Angular application. They control a part of the UI and encapsulate the logic and template."),(0,r.kt)("li",{parentName:"ul"},"They are defined using the ",(0,r.kt)("inlineCode",{parentName:"li"},"@Component")," decorator."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Templates"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Templates in Angular are written in HTML with Angular-specific syntax (e.g., data binding, directives, etc.) that allows you to define how the application should look."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Directives"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Directives add behavior to the DOM elements. They are markers on a DOM element (e.g., ",(0,r.kt)("inlineCode",{parentName:"li"},"*ngIf"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"*ngFor"),") that tell Angular to attach a specified behavior to that DOM element."),(0,r.kt)("li",{parentName:"ul"},"They can be either structural (e.g., ",(0,r.kt)("inlineCode",{parentName:"li"},"ngIf"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"ngFor"),") or attribute directives."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Services"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Services in Angular are singletons that are responsible for encapsulating shared logic, such as data fetching, logging, or other utility functions."),(0,r.kt)("li",{parentName:"ul"},"They are defined using the ",(0,r.kt)("inlineCode",{parentName:"li"},"@Injectable")," decorator and can be injected into components, directives, or other services."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Dependency Injection (DI)"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Angular has a built-in dependency injection system that manages the creation and sharing of application services."),(0,r.kt)("li",{parentName:"ul"},"It allows you to write more modular, testable, and maintainable code."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Data Binding"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Data binding is a way to establish a connection between the template and the component. There are several types of data binding:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Interpolation")," (",(0,r.kt)("inlineCode",{parentName:"li"},"{{}}"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Property Binding")," (",(0,r.kt)("inlineCode",{parentName:"li"},'[property]="expression"'),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Event Binding")," (",(0,r.kt)("inlineCode",{parentName:"li"},'(event)="statement"'),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Two-way Binding")," (",(0,r.kt)("inlineCode",{parentName:"li"},"[(ngModel)]"),")"))))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Lifecycle Hooks"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Angular provides a set of lifecycle hooks that allow you to tap into certain events in a component's lifecycle, like ",(0,r.kt)("inlineCode",{parentName:"li"},"ngOnInit"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"ngOnChanges"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"ngAfterViewInit"),", etc."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Routing"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Routing allows you to build single-page applications with multiple views and navigate between them. Angular's router helps manage the application state and navigate between different components."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Forms"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Angular provides both template-driven forms and reactive forms for handling user input and form validation."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"HTTP Client"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The Angular HTTP client allows you to make HTTP requests and handle responses in your application. It's used for fetching data from servers."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Pipes"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Pipes allow you to transform data in the template before it's displayed. Angular provides several built-in pipes, and you can also create custom ones."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Testing"),":"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Angular has a robust testing framework that allows you to write unit tests, integration tests, and end-to-end tests for your application.")))),(0,r.kt)("p",null,"These are the fundamental building blocks of an Angular application. Understanding and effectively using these elements will allow you to create powerful and dynamic web applications."))}m.isMDXComponent=!0}}]);
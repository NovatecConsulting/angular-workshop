"use strict";(self.webpackChunkangular_workshop=self.webpackChunkangular_workshop||[]).push([[2997],{9059:e=>{e.exports=JSON.parse('{"label":"component","permalink":"/angular-workshop/docs/tags/component","allTagsPath":"/angular-workshop/docs/tags","count":6,"items":[{"id":"self-study/basic-concepts/component/component","title":"Components","description":"Components are the building bricks of your application.","permalink":"/angular-workshop/docs/self-study/basic-concepts/component/"},{"id":"slides/foundation/building-blocks/components","title":"Components","description":"Components are the basic building blocks of an Angular application.","permalink":"/angular-workshop/docs/slides/foundation/building-blocks/components"},{"id":"exercises/basic/atomic-component/create-component","title":"Creation","description":"Create a simple Angular component with hardcoded data.","permalink":"/angular-workshop/docs/exercises/basic/atomic-component/create-component"},{"id":"exercises/basic/atomic-component/reusable-component","title":"Increase Reusability","description":"Add props and events to an existing component.","permalink":"/angular-workshop/docs/exercises/basic/atomic-component/reusable-component"},{"id":"self-study/basic-concepts/component/component-lifecycle","title":"Lifecycle","description":"The component has multiple lifecycle hooks from initialization when it gets mounted inside the app to its destruction when it gets unmounted. Lifecycle hooks are implemented as class methods inside the .component.ts file.","permalink":"/angular-workshop/docs/self-study/basic-concepts/component/component-lifecycle"},{"id":"exercises/basic/atomic-component/create-component-test","title":"Testing","description":"Create a base unit test for the simple Angular component.","permalink":"/angular-workshop/docs/exercises/basic/atomic-component/create-component-test"}]}')}}]);
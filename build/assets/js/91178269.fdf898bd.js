"use strict";(self.webpackChunkangular_workshop=self.webpackChunkangular_workshop||[]).push([[206],{9613:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var o=n(9496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),m=c(n),u=r,h=m["".concat(l,".").concat(u)]||m[u]||d[u]||s;return n?o.createElement(h,i(i({ref:t},p),{},{components:n})):o.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=u;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[m]="string"==typeof e?e:r,i[1]=a;for(var c=2;c<s;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6374:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var o=n(1163),r=(n(9496),n(9613));const s={sidebar_position:1,id:"styles",tags:["foundations","prerequisites","styles","css"]},i="Styling Conventions and Methodologies",a={unversionedId:"prerequisites/styles",id:"prerequisites/styles",title:"Styling Conventions and Methodologies",description:"Conventions",source:"@site/docs/prerequisites/styles.md",sourceDirName:"prerequisites",slug:"/prerequisites/styles",permalink:"/angular-workshop/docs/prerequisites/styles",draft:!1,tags:[{label:"foundations",permalink:"/angular-workshop/docs/tags/foundations"},{label:"prerequisites",permalink:"/angular-workshop/docs/tags/prerequisites"},{label:"styles",permalink:"/angular-workshop/docs/tags/styles"},{label:"css",permalink:"/angular-workshop/docs/tags/css"}],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,id:"styles",tags:["foundations","prerequisites","styles","css"]},sidebar:"tutorialSidebar",previous:{title:"Single Page Application (SPA)",permalink:"/angular-workshop/docs/prerequisites/spa"},next:{title:"Getting Started",permalink:"/angular-workshop/docs/setup"}},l={},c=[{value:"Conventions",id:"conventions",level:2},{value:"Block-Element-Modifier (BEM)",id:"block-element-modifier-bem",level:3},{value:"Methodologies",id:"methodologies",level:2},{value:"Atomic Design",id:"atomic-design",level:3},{value:"Composition Utility Block Exception (CUBE)",id:"composition-utility-block-exception-cube",level:3},{value:"Reading List",id:"reading-list",level:2},{value:"Sources",id:"sources",level:4}],p={toc:c},m="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"styling-conventions-and-methodologies"},"Styling Conventions and Methodologies"),(0,r.kt)("h2",{id:"conventions"},"Conventions"),(0,r.kt)("h3",{id:"block-element-modifier-bem"},"Block-Element-Modifier (BEM)"),(0,r.kt)("p",null,"BEM is a naming convention standard for CSS class names.\nIt has fairly wide adoption and is immensely useful in writing CSS that is easier to read, understand, and scale ","[1]",".\nDeveloped by the team at ",(0,r.kt)("em",{parentName:"p"},"Yandex"),", its goal is to help developers better understand the relationship between the HTML and\nCSS in a given project ","[2]",".\nBEM also aims to write independent CSS blocks in order to reuse them later in your project ","[3]","."),(0,r.kt)("h2",{id:"methodologies"},"Methodologies"),(0,r.kt)("h3",{id:"atomic-design"},"Atomic Design"),(0,r.kt)("p",null,"Atomic Design is a CSS methodology created by ",(0,r.kt)("em",{parentName:"p"},"Brad Frost"),".\nIt provides direction for creating scalable systems, reusable components, and design systems.\nAtomic Design was inspired by chemistry, which is why the building blocks are called atoms, molecules, organisms, templates, and pages ","[4]","."),(0,r.kt)("h3",{id:"composition-utility-block-exception-cube"},"Composition Utility Block Exception (CUBE)"),(0,r.kt)("p",null,"CUBE CSS is a CSS methodology geared towards simplicity, pragmatism, and consistency.\nCUBE stands for Composition Utility Block Exception.\nIt is a tool-agnostic methodology that is very much an extension of good ol\u2019 CSS, rather than a reinvention.\nThe core of CUBE CSS\u2019 methodology is that most of the work is already done for us with global and high-level styles ","[5, 6]","."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"reading-list"},"Reading List"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"BEM CheatSheet ",(0,r.kt)("a",{parentName:"li",href:"https://bem-cheat-sheet.9elements.com"},"https://bem-cheat-sheet.9elements.com")," ",(0,r.kt)("em",{parentName:"li"},"(2023.04.18)")),(0,r.kt)("li",{parentName:"ul"},"Atomic Design Book ",(0,r.kt)("a",{parentName:"li",href:"https://atomicdesign.bradfrost.com"},"https://atomicdesign.bradfrost.com")," ",(0,r.kt)("em",{parentName:"li"},"(2023.04.18)")),(0,r.kt)("li",{parentName:"ul"},"Minimal snippets for modern CSS layouts and components ",(0,r.kt)("a",{parentName:"li",href:"https://smolcss.dev"},"https://smolcss.dev")," ",(0,r.kt)("em",{parentName:"li"},"(2023.04.19)")),(0,r.kt)("li",{parentName:"ul"},"Modern CSS Solutions for Old CSS Problems ",(0,r.kt)("a",{parentName:"li",href:"https://moderncss.dev"},"https://moderncss.dev")," ",(0,r.kt)("em",{parentName:"li"},"(2023.04.19)"))),(0,r.kt)("h4",{id:"sources"},"Sources"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://sparkbox.com/foundry/bem_by_example"},"https://sparkbox.com/foundry/bem_by_example")," ",(0,r.kt)("em",{parentName:"li"},"(2023.04.18)")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://css-tricks.com/bem-101/"},"https://css-tricks.com/bem-101/")," ",(0,r.kt)("em",{parentName:"li"},"(2023.04.18)")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://codeburst.io/understanding-css-bem-naming-convention-a8cca116d252"},"https://codeburst.io/understanding-css-bem-naming-convention-a8cca116d252")," ",(0,r.kt)("em",{parentName:"li"},"(2023.04.18)")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://bradfrost.com/blog/post/atomic-web-design/"},"https://bradfrost.com/blog/post/atomic-web-design/")," ",(0,r.kt)("em",{parentName:"li"},"(2023.04.18)")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://andy-bell.co.uk/cube-css/"},"https://andy-bell.co.uk/cube-css/")," ",(0,r.kt)("em",{parentName:"li"},"(2023.04.18)")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://blog.logrocket.com/cube-css-alternative-css-methodology/"},"https://blog.logrocket.com/cube-css-alternative-css-methodology/")," ",(0,r.kt)("em",{parentName:"li"},"(2023.04.18)"))))}d.isMDXComponent=!0}}]);